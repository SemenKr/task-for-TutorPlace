@use "sass:math";

// Адаптивное свойство
$maxWidth: 1920; // Максимальная ширина всей страницы
$maxWidthContainer: 1170; // Максимальная ширина контейнера

// Миксин для настройки адаптивных свойств
@mixin additiv-value($property, $startSize, $minSize, $type: 0) {
  $addSize: $startSize - $minSize; // Вычисляем разницу между начальным и минимальным значением

  @if $type == 1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px; // Устанавливаем начальное значение

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
        ((100vw - 320px) / #{$maxWidthContainer - 320})
      ); // Изменяем значение на экранах с шириной меньше максимальной ширины контейнера
    }
  } @else if $type == 2 {
    // Только если больше контейнера
    #{$property}: $startSize + px; // Устанавливаем начальное значение

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
      ); // Изменяем значение на экранах с шириной больше максимальной ширины контейнера
    }
  } @else {
    // Всегда
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    ); // Изменяем значение на всех экранах
  }
}


// Функция для перевода в REM
@function rem($px, $base-font-size: 16px) {
  @if unitless($px) {
    $px: $px * 1px;
  }
  @if unitless($base-font-size) {
    $base-font-size: $base-font-size * 1px;
  }
  @return math.div($px, $base-font-size) * 1rem;
}


@mixin retina {
  @media (min-resolution: $retina-dpi), (min-resolution: $retina-dppx) {
    @content;
  }
}

@mixin hover {
  @media (hover: hover) {
    &:hover:not(.focus-visible) {
      @content;
    }
  }
}

@mixin focus {
  &.focus-visible:focus {
    @content;
  }
}

@mixin active {
  &.focus-visible:active {
    @content;
  }
}

@mixin hover-focus {
  @media (hover: hover) {
    &:hover:not(.focus-visible) {
      @content;
    }
  }

  &.focus-visible:focus {
    @content;
  }
}

$maxWidth: 1920;
@mixin adaptive-font($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$maxWidth: $maxWidth - 320;
	font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}

// Desktop first

@mixin vp-1919 {
  @media (max-width: ($vp-1920 - 1px)) {
    @content;
  }
}

@mixin vp-1439 {
  @media (max-width: ($vp-1440 - 1px)) {
    @content;
  }
}

@mixin vp-1279 {
  @media (max-width: ($vp-1280 - 1px)) {
    @content;
  }
}

@mixin vp-1023 {
  @media (max-width: ($vp-1024 - 1px)) {
    @content;
  }
}

@mixin vp-767 {
  @media (max-width: ($vp-768 - 1px)) {
    @content;
  }
}

@mixin vp-374 {
  @media (max-width: ($vp-375 - 1px)) {
    @content;
  }
}

// Mobile first

// @mixin vp-375 {
//   @media (min-width: $vp-375) {
//     @content;
//   }
// }

// @mixin vp-768 {
//   @media (min-width: $vp-768) {
//     @content;
//   }
// }

// @mixin vp-1024 {
//   @media (min-width: $vp-1024) {
//     @content;
//   }
// }

// @mixin vp-1280 {
//   @media (min-width: $vp-1280) {
//     @content;
//   }
// }

// @mixin vp-1440 {
//   @media (min-width: $vp-1440) {
//     @content;
//   }
// }

// @mixin vp-1920 {
//   @media (min-width: $vp-1920) {
//     @content;
//   }
// }

// ---------------------------------

// не нужно добавлять свои миксины для ресета списков, обнуления кнопок и прочие
// этим вы усложняете работу команды, проверку вашего кода и будущую поддержку проекта
